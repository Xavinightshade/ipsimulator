<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABOAE4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2/Vr8aZp0lztDsMKq
        k4yTwK46XxHqk7Eef5IJ+7GoGPx61rePJY28J3OHB+ePv/tCuC0+8YWrZl3YAxu5xXzGeVq0KiUJNK3Q
        9DBwg4tyV2dIt9eSHL3Ux+rmrcVxNx++k/Fz/jXGS6/PA3yrA31U/wBDV6z8SSyY3RW/4bv8a8eM6iXN
        Jv8AE7HGL0SO1guJx0mf/vutKK8nwMtv+orE0m+juUBkWIH2zWrPcRi1kCyKPl7cV6dCtJQ54yf4nHUi
        ua1jXgmE0Qdcdxwc8jg1LWPoM0S6NCDIo5fv/tGtP7RH/wA9F/OvpsPNzpRm+qOGaUZNEtFRfaI/+ei/
        nR9oi/56L+dbEnL+O5IT4SucREHfH/yz6/MK8+06SM2jkLkcdBXofjuSU+E7kGEj54/4v9oV53Yrut3J
        hO7A+YMVP6V8rn1vaK/Y9HB/CZ94y7z8h/75q1ppV921cBMbiVz1qpdhg54f8WB/pTLeaaG53xl1bA53
        e1eXyKULI7E7HYWt9JAgVGdR7IKtrfPIMO8rA9iDWMt/MlsshgVm9Tx/KoR4llicKbFW+kuP6VlSc9k9
        vMJWetjrbS/aCJYomkRB0UL0rTh1KTjcGP1iBrlbTxA0mP8AQDz/ANNv/rV1VlI0sQf7Iee2/Nejhq07
        8sZ2sc1WCWrRej1OPcBJBkdyE6Ve82H/AJ4t/wB+6wdYmnFkFWAqCeQGxmuhEs2B+4PT+9X0GAxE6kpQ
        k72t+NziqwSSkupzfj0T/wDCJXJYoQHj6D/aFefaeJPsr4K9B1r0Dx7Ew8JXOZWYF4xgjj7wrzrT45Rb
        OI5uMfdccfn2ryM91qL0OnB/CU7zzNx+7+VVk3CcDK5OMce1T3aybjkn8GBFQopMpBY4IGQe/FebTXun
        XLY3XEv2NR8tYsok80fd61rNbkWa7Z5VGPug5H65rIkjYS/609f7tY0UrvUo2tP835eU616Dpi3H2ZeY
        +npXnthHKSuJ8f8AAf8A69djBbX5gj8u/nCkciKMD9TmtcJ/FdiMR8Be1oTi0QFoxlsDiukC3OOGjx9D
        XG3NnJHbl5JJmfgBpCSfwzXZCGTA/fv0r6HK/wCJUv5fqefX+CPzMLxVpf8Aafhy5trQq052uql/vbTn
        A9+K8ztIlihljkBR14ZWyCDXs/m23aL/AMh1nahpek6ln7RajeRjzETa/wCff8a1zLLnilzQdmTQr+z0
        ex4xdCPf1/WoU8vz+vYd/avQr74e20zlrXUHQdhLDk/mP8K5TXvDx0C5t1lmSbz1LKUUgrtwO4968aeB
        r0Y3mtEd0a9OWiZOyxfYk+b9axZFj80c9/WtUy4tFBiVwO6jB/I8frWTI6GUHy2HP9w15tKLTZsbFmYI
        wGY9xxnrXYWNwrQDawX2Bya4SGaIyAbG47BDXd2N/Ba2aJDYSyOR950CD8zz+QNdOEXLUd+pniNYjdUu
        FW2AZg3PQnFdhCbOZAyuPcb+lclqMi3tlunVEdT8qRpwD6ljyfyFbVvdw28jHy8gjH3K9/K3epU07fqc
        Nde5H5m3503/AD7n/vqjzpv+fc/99VPRXsnKQedL/wA+7f8AfVcD8R7W8mNjerauYIg6SMOdhJGM+3HW
        vRaZJGsilWUMrDBBGQRWGJoKtTdN9S4S5ZXPFWkcWa/u2/Osh5D5o+Q9fWvXNR8F2N2h+yubVs8BRuT8
        v8DXI33w/wBQt5srdWrDqCSw/pXyk8tr0G+Zaep6cMRCfUwIGYSK3lnB969CsH+2Wa/u2Vx71hWnhK9O
        FeS2x7M3/wATXRxeHprONfNnQj/YHP61WCwtWc3p+IsRUhy7kOoB47ZYIomknkbgAj8/oK1bZZbh2zA2
        AOTnvT7PTgR8pCg9SeSa1ooUijCoOPfvX0mEwvsLyb1Z59SpzJLsf//Z
</value>
  </data>
  <data name="button7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABJAEkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD36kJxRnivP/iV40Oh
        26aVZbmv7lCzGNsGJM4HPYtz7gA+1VCLnLlQm7G1q3isQ3MthpESXt9H/rG3Yih/32Hf2HNZElrcaiCd
        S1W7nbHzRQSGCMeoAXBP4k1iaBbz2un29sDGED7JNgwC5GT/AIc810Iu3W9EZhKRRIdwz7Hk+gzitpQU
        dEK5nSaDou4JJp0ZkPcs2fxJOaYNOfT2D6Vqt/ZHsonMsf8A3w+Rir5Ntb2Uk93fmVeGKKSGx6Y/oKwp
        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
</value>
  </data>
</root>