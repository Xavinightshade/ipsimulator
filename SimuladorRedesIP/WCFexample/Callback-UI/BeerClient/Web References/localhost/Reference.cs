//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// CODEGEN: The binding 'TcpBinding' from #pragma warning disable 1591

//namespace 'http://tempuri.org/' was ignored.  There is no SoapTransportImporter that understands the transport 'http://schemas.microsoft.com/soap/tcp'.
// CODEGEN: The binding 'TcpBinding' from namespace 'http://tempuri.org/' was ignored.  There is no SoapTransportImporter that understands the transport 'http://schemas.microsoft.com/soap/tcp'.
// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
namespace BeerClient.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The operation 'NotifyGuestJoinedParty' from namespace 'http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/' was ignored.  Notification is not supported.
    // CODEGEN: The operation 'NotifyCambioPosicion' from namespace 'http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/' was ignored.  Notification is not supported.
    // CODEGEN: The operation 'NotifyBeerInventoryChanged' from namespace 'http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/' was ignored.  Notification is not supported.
    // CODEGEN: The operation 'NotifyGuestLeftParty' from namespace 'http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/' was ignored.  Notification is not supported.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'EndpointReference' from namespace 'http://www.w3.org/2005/08/addressing' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HttpBinding", Namespace="http://tempuri.org/")]
    public partial class BeerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback JoinThePartyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablecerPosicionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IniciarBolaOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeBeerRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrinkBeerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveThePartyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BeerService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = "http://localhost:8001/BeerInventory/service";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event JoinThePartyCompletedEventHandler JoinThePartyCompleted;
        
        /// <remarks/>
        public event EstablecerPosicionCompletedEventHandler EstablecerPosicionCompleted;
        
        /// <remarks/>
        public event IniciarBolaCompletedEventHandler IniciarBolaCompleted;
        
        /// <remarks/>
        public event MakeBeerRunCompletedEventHandler MakeBeerRunCompleted;
        
        /// <remarks/>
        public event DrinkBeerCompletedEventHandler DrinkBeerCompleted;
        
        /// <remarks/>
        public event LeaveThePartyCompletedEventHandler LeaveThePartyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/JoinTheParty", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", ResponseNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void JoinTheParty([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guestName, out int JoinThePartyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool JoinThePartyResultSpecified) {
            object[] results = this.Invoke("JoinTheParty", new object[] {
                        guestName});
            JoinThePartyResult = ((int)(results[0]));
            JoinThePartyResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void JoinThePartyAsync(string guestName) {
            this.JoinThePartyAsync(guestName, null);
        }
        
        /// <remarks/>
        public void JoinThePartyAsync(string guestName, object userState) {
            if ((this.JoinThePartyOperationCompleted == null)) {
                this.JoinThePartyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinThePartyOperationCompleted);
            }
            this.InvokeAsync("JoinTheParty", new object[] {
                        guestName}, this.JoinThePartyOperationCompleted, userState);
        }
        
        private void OnJoinThePartyOperationCompleted(object arg) {
            if ((this.JoinThePartyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinThePartyCompleted(this, new JoinThePartyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/EstablecerPosicion", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", ResponseNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EstablecerPosicion(int x, [System.Xml.Serialization.XmlIgnoreAttribute()] bool xSpecified, int y, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ySpecified) {
            this.Invoke("EstablecerPosicion", new object[] {
                        x,
                        xSpecified,
                        y,
                        ySpecified});
        }
        
        /// <remarks/>
        public void EstablecerPosicionAsync(int x, bool xSpecified, int y, bool ySpecified) {
            this.EstablecerPosicionAsync(x, xSpecified, y, ySpecified, null);
        }
        
        /// <remarks/>
        public void EstablecerPosicionAsync(int x, bool xSpecified, int y, bool ySpecified, object userState) {
            if ((this.EstablecerPosicionOperationCompleted == null)) {
                this.EstablecerPosicionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablecerPosicionOperationCompleted);
            }
            this.InvokeAsync("EstablecerPosicion", new object[] {
                        x,
                        xSpecified,
                        y,
                        ySpecified}, this.EstablecerPosicionOperationCompleted, userState);
        }
        
        private void OnEstablecerPosicionOperationCompleted(object arg) {
            if ((this.EstablecerPosicionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablecerPosicionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/IniciarBola", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", ResponseNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IniciarBola() {
            this.Invoke("IniciarBola", new object[0]);
        }
        
        /// <remarks/>
        public void IniciarBolaAsync() {
            this.IniciarBolaAsync(null);
        }
        
        /// <remarks/>
        public void IniciarBolaAsync(object userState) {
            if ((this.IniciarBolaOperationCompleted == null)) {
                this.IniciarBolaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIniciarBolaOperationCompleted);
            }
            this.InvokeAsync("IniciarBola", new object[0], this.IniciarBolaOperationCompleted, userState);
        }
        
        private void OnIniciarBolaOperationCompleted(object arg) {
            if ((this.IniciarBolaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IniciarBolaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/MakeBeerRun", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MakeBeerRun([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guestName, int numberOfBeers, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numberOfBeersSpecified) {
            this.Invoke("MakeBeerRun", new object[] {
                        guestName,
                        numberOfBeers,
                        numberOfBeersSpecified});
        }
        
        /// <remarks/>
        public void MakeBeerRunAsync(string guestName, int numberOfBeers, bool numberOfBeersSpecified) {
            this.MakeBeerRunAsync(guestName, numberOfBeers, numberOfBeersSpecified, null);
        }
        
        /// <remarks/>
        public void MakeBeerRunAsync(string guestName, int numberOfBeers, bool numberOfBeersSpecified, object userState) {
            if ((this.MakeBeerRunOperationCompleted == null)) {
                this.MakeBeerRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeBeerRunOperationCompleted);
            }
            this.InvokeAsync("MakeBeerRun", new object[] {
                        guestName,
                        numberOfBeers,
                        numberOfBeersSpecified}, this.MakeBeerRunOperationCompleted, userState);
        }
        
        private void OnMakeBeerRunOperationCompleted(object arg) {
            if ((this.MakeBeerRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeBeerRunCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/DrinkBeer", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DrinkBeer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guestName) {
            this.Invoke("DrinkBeer", new object[] {
                        guestName});
        }
        
        /// <remarks/>
        public void DrinkBeerAsync(string guestName) {
            this.DrinkBeerAsync(guestName, null);
        }
        
        /// <remarks/>
        public void DrinkBeerAsync(string guestName, object userState) {
            if ((this.DrinkBeerOperationCompleted == null)) {
                this.DrinkBeerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrinkBeerOperationCompleted);
            }
            this.InvokeAsync("DrinkBeer", new object[] {
                        guestName}, this.DrinkBeerOperationCompleted, userState);
        }
        
        private void OnDrinkBeerOperationCompleted(object arg) {
            if ((this.DrinkBeerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrinkBeerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/BeerInvent" +
            "oryService/LeaveTheParty", RequestNamespace="http://jeffbarnes.net/wcf/samples/client_callback/BeerInventoryService/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LeaveTheParty([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guestName) {
            this.Invoke("LeaveTheParty", new object[] {
                        guestName});
        }
        
        /// <remarks/>
        public void LeaveThePartyAsync(string guestName) {
            this.LeaveThePartyAsync(guestName, null);
        }
        
        /// <remarks/>
        public void LeaveThePartyAsync(string guestName, object userState) {
            if ((this.LeaveThePartyOperationCompleted == null)) {
                this.LeaveThePartyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveThePartyOperationCompleted);
            }
            this.InvokeAsync("LeaveTheParty", new object[] {
                        guestName}, this.LeaveThePartyOperationCompleted, userState);
        }
        
        private void OnLeaveThePartyOperationCompleted(object arg) {
            if ((this.LeaveThePartyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveThePartyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void JoinThePartyCompletedEventHandler(object sender, JoinThePartyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinThePartyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JoinThePartyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int JoinThePartyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool JoinThePartyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void EstablecerPosicionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void IniciarBolaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MakeBeerRunCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DrinkBeerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LeaveThePartyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591